name: Build binaries

on:
  pull_request:
  push:
    branches:
      - "main"
      - "hjp/*"

jobs:
  linux:
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
    name: Build binaries for linux platform
    runs-on: ubuntu-20.04
    steps:
      - name: Set up go
        id: go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p "build/" "releases/"
          GOARCH="${{ matrix.arch }}" make
          cd build/
          mv analyzer livepeer-analyzer
          tar -czf "../releases/livepeer-analyzer-linux-${{ matrix.arch }}.tar.gz" livepeer-analyzer

      - name: Upload artifacts for cutting release
        uses: actions/upload-artifact@master
        with:
          name: release-artifacts
          path: releases/

  macos:
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
    name: Build binaries for macOS platform
    runs-on: macos-11
    steps:
      - name: Set up go
        id: go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: |
          mkdir -p "build/" "releases/"
          GOARCH="${{ matrix.arch }}" make
          cd build/
          mv analyzer livepeer-analyzer

      - name: Codesign and notarize binaries
        uses: livepeer/action-gh-codesign-apple@latest
        with:
          developer-certificate-id: ${{ secrets.CI_MACOS_CERTIFICATE_ID }}
          developer-certificate-base64: ${{ secrets.CI_MACOS_CERTIFICATE_BASE64 }}
          developer-certificate-password: ${{ secrets.CI_MACOS_CERTIFICATE_PASSWORD }}
          app-notarization-email: ${{ secrets.CI_MACOS_NOTARIZATION_USER }}
          app-notarization-password: ${{ secrets.CI_MACOS_NOTARIZATION_PASSWORD }}
          binary-path: "build/livepeer-analyzer"
          app-notarization-file: "livepeer-analyzer-darwin-${{ matrix.arch }}.zip"
          app-bundle-id: "org.livepeer.analyzer"

      - name: Archive signed binary
        run: |
          cd build/
          tar -czf "../releases/livepeer-analyzer-darwin-${{ matrix.arch }}.tar.gz" livepeer-analyzer

      - name: Upload artifacts for cutting release
        uses: actions/upload-artifact@master
        with:
          name: release-artifacts
          path: releases/

  windows:
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
    name: Build binaries for windows platform
    runs-on: windows-2022
    steps:
      - name: Set up go
        id: go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-${{ matrix.arch }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build
        shell: bash
        run: |
          mkdir -p "build/" "releases/"
          GOARCH="${{ matrix.arch }}" make
          cd build/
          mv analyzer.exe livepeer-analyzer.exe
          tar -czf "../releases/livepeer-analyzer-windows-${{ matrix.arch }}.tar.gz" livepeer-analyzer.exe

      - name: Upload artifacts for cutting release
        uses: actions/upload-artifact@master
        with:
          name: release-artifacts
          path: releases/
